/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class hdf_h5_HDFNativeData */

#ifndef _Included_hdf_h5_HDFNativeData
#define _Included_hdf_h5_HDFNativeData
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     hdf_h5_HDFNativeData
 * Method:    byteToInt
 * Signature: ([B)[I
 */
JNIEXPORT jintArray JNICALL Java_hdf_h5_HDFNativeData_byteToInt___3B
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     hdf_h5_HDFNativeData
 * Method:    byteToFloat
 * Signature: ([B)[F
 */
JNIEXPORT jfloatArray JNICALL Java_hdf_h5_HDFNativeData_byteToFloat___3B
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     hdf_h5_HDFNativeData
 * Method:    byteToShort
 * Signature: ([B)[S
 */
JNIEXPORT jshortArray JNICALL Java_hdf_h5_HDFNativeData_byteToShort___3B
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     hdf_h5_HDFNativeData
 * Method:    byteToLong
 * Signature: ([B)[J
 */
JNIEXPORT jlongArray JNICALL Java_hdf_h5_HDFNativeData_byteToLong___3B
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     hdf_h5_HDFNativeData
 * Method:    byteToDouble
 * Signature: ([B)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_hdf_h5_HDFNativeData_byteToDouble___3B
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     hdf_h5_HDFNativeData
 * Method:    byteToInt
 * Signature: (II[B)[I
 */
JNIEXPORT jintArray JNICALL Java_hdf_h5_HDFNativeData_byteToInt__II_3B
  (JNIEnv *, jclass, jint, jint, jbyteArray);

/*
 * Class:     hdf_h5_HDFNativeData
 * Method:    byteToShort
 * Signature: (II[B)[S
 */
JNIEXPORT jshortArray JNICALL Java_hdf_h5_HDFNativeData_byteToShort__II_3B
  (JNIEnv *, jclass, jint, jint, jbyteArray);

/*
 * Class:     hdf_h5_HDFNativeData
 * Method:    byteToFloat
 * Signature: (II[B)[F
 */
JNIEXPORT jfloatArray JNICALL Java_hdf_h5_HDFNativeData_byteToFloat__II_3B
  (JNIEnv *, jclass, jint, jint, jbyteArray);

/*
 * Class:     hdf_h5_HDFNativeData
 * Method:    byteToLong
 * Signature: (II[B)[J
 */
JNIEXPORT jlongArray JNICALL Java_hdf_h5_HDFNativeData_byteToLong__II_3B
  (JNIEnv *, jclass, jint, jint, jbyteArray);

/*
 * Class:     hdf_h5_HDFNativeData
 * Method:    byteToDouble
 * Signature: (II[B)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_hdf_h5_HDFNativeData_byteToDouble__II_3B
  (JNIEnv *, jclass, jint, jint, jbyteArray);

/*
 * Class:     hdf_h5_HDFNativeData
 * Method:    intToByte
 * Signature: (II[I)[B
 */
JNIEXPORT jbyteArray JNICALL Java_hdf_h5_HDFNativeData_intToByte__II_3I
  (JNIEnv *, jclass, jint, jint, jintArray);

/*
 * Class:     hdf_h5_HDFNativeData
 * Method:    shortToByte
 * Signature: (II[S)[B
 */
JNIEXPORT jbyteArray JNICALL Java_hdf_h5_HDFNativeData_shortToByte__II_3S
  (JNIEnv *, jclass, jint, jint, jshortArray);

/*
 * Class:     hdf_h5_HDFNativeData
 * Method:    floatToByte
 * Signature: (II[F)[B
 */
JNIEXPORT jbyteArray JNICALL Java_hdf_h5_HDFNativeData_floatToByte__II_3F
  (JNIEnv *, jclass, jint, jint, jfloatArray);

/*
 * Class:     hdf_h5_HDFNativeData
 * Method:    longToByte
 * Signature: (II[J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_hdf_h5_HDFNativeData_longToByte__II_3J
  (JNIEnv *, jclass, jint, jint, jlongArray);

/*
 * Class:     hdf_h5_HDFNativeData
 * Method:    doubleToByte
 * Signature: (II[D)[B
 */
JNIEXPORT jbyteArray JNICALL Java_hdf_h5_HDFNativeData_doubleToByte__II_3D
  (JNIEnv *, jclass, jint, jint, jdoubleArray);

/*
 * Class:     hdf_h5_HDFNativeData
 * Method:    byteToByte
 * Signature: (B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_hdf_h5_HDFNativeData_byteToByte
  (JNIEnv *, jclass, jbyte);

/*
 * Class:     hdf_h5_HDFNativeData
 * Method:    intToByte
 * Signature: (I)[B
 */
JNIEXPORT jbyteArray JNICALL Java_hdf_h5_HDFNativeData_intToByte__I
  (JNIEnv *, jclass, jint);

/*
 * Class:     hdf_h5_HDFNativeData
 * Method:    shortToByte
 * Signature: (S)[B
 */
JNIEXPORT jbyteArray JNICALL Java_hdf_h5_HDFNativeData_shortToByte__S
  (JNIEnv *, jclass, jshort);

/*
 * Class:     hdf_h5_HDFNativeData
 * Method:    floatToByte
 * Signature: (F)[B
 */
JNIEXPORT jbyteArray JNICALL Java_hdf_h5_HDFNativeData_floatToByte__F
  (JNIEnv *, jclass, jfloat);

/*
 * Class:     hdf_h5_HDFNativeData
 * Method:    longToByte
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_hdf_h5_HDFNativeData_longToByte__J
  (JNIEnv *, jclass, jlong);

/*
 * Class:     hdf_h5_HDFNativeData
 * Method:    doubleToByte
 * Signature: (D)[B
 */
JNIEXPORT jbyteArray JNICALL Java_hdf_h5_HDFNativeData_doubleToByte__D
  (JNIEnv *, jclass, jdouble);

#ifdef __cplusplus
}
#endif
#endif
