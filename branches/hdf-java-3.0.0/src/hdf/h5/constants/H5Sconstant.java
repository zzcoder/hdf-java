/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * Copyright by The HDF Group.                                               *
 * Copyright by the Board of Trustees of the University of Illinois.         *
 * All rights reserved.                                                      *
 *                                                                           *
 * This file is part of HDF Java Products. The full HDF Java copyright       *
 * notice, including terms governing use, modification, and redistribution,  *
 * is contained in the file, COPYING.  COPYING can be found at the root of   *
 * the source code distribution tree. You can also access it online  at      *
 * http://www.hdfgroup.org/products/licenses.html.  If you do not have       *
 * access to the file, you may request a copy from help@hdfgroup.org.        *
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

package hdf.h5.constants;

import hdf.h5.H5;


/**
/**
 *  This class contains C constants and enumerated types of HDF5 library.
 *  The values of these constants are obtained from the library by calling
 *  J2C(int jconstant), where jconstant is any of the private constants which
 *  start their name with "JH5" need to be converted.
 *  <p>
 *  <b>Do not edit this file!</b>
 *  </p>
 */
///////////////////////////////////////////////////////////////////////////
//           This list must be identical to H5Constants.h                //
//                DO NOT EDIT THE LIST !!!                               //
///////////////////////////////////////////////////////////////////////////

public class H5Sconstant {
  final private static int JH5S_ALL = 3010;
  final private static int JH5S_COMPLEX = 3020;
  final private static int JH5S_MAX_RANK = 3030;
  final private static int JH5S_NO_CLASS = 3040;
  final private static int JH5S_SCALAR = 3050;
  final private static int JH5S_SEL_ALL = 3060;
  final private static int JH5S_SEL_ERROR = 3070;
  final private static int JH5S_SEL_HYPERSLABS = 3080;
  final private static int JH5S_SEL_N = 3090;
  final private static int JH5S_SEL_NONE = 3100;
  final private static int JH5S_SEL_POINTS = 3110;
  final private static int JH5S_SELECT_AND = 3120;
  final private static int JH5S_SELECT_APPEND = 3130;
  final private static int JH5S_SELECT_INVALID = 3140;
  final private static int JH5S_SELECT_NOOP = 3150;
  final private static int JH5S_SELECT_NOTA = 3160;
  final private static int JH5S_SELECT_NOTB = 3170;
  final private static int JH5S_SELECT_OR = 3180;
  final private static int JH5S_SELECT_PREPEND = 3190;
  final private static int JH5S_SELECT_SET = 3200;
  final private static int JH5S_SELECT_XOR = 3210;
  final private static int JH5S_SIMPLE = 3220;
  final private static int JH5S_UNLIMITED = 3230;

  ///////////////////////////////////////////////////////////////////////////
  //                Get the HDF5 constants from the library                //
  ///////////////////////////////////////////////////////////////////////////
  final public static int H5S_ALL = H5.J2C( JH5S_ALL );
  final public static int H5S_COMPLEX = H5.J2C( JH5S_COMPLEX );
  final public static int H5S_MAX_RANK = H5.J2C( JH5S_MAX_RANK );
  final public static int H5S_NO_CLASS = H5.J2C( JH5S_NO_CLASS );
  final public static int H5S_SCALAR = H5.J2C( JH5S_SCALAR );
  final public static int H5S_SEL_ALL = H5.J2C( JH5S_SEL_ALL );
  final public static int H5S_SEL_ERROR = H5.J2C( JH5S_SEL_ERROR );
  final public static int H5S_SEL_HYPERSLABS = H5.J2C( JH5S_SEL_HYPERSLABS );
  final public static int H5S_SEL_N = H5.J2C( JH5S_SEL_N );
  final public static int H5S_SEL_NONE = H5.J2C( JH5S_SEL_NONE );
  final public static int H5S_SEL_POINTS = H5.J2C( JH5S_SEL_POINTS );
  final public static int H5S_SELECT_AND = H5.J2C( JH5S_SELECT_AND );
  final public static int H5S_SELECT_APPEND = H5.J2C( JH5S_SELECT_APPEND );
  final public static int H5S_SELECT_INVALID = H5.J2C( JH5S_SELECT_INVALID );
  final public static int H5S_SELECT_NOOP = H5.J2C( JH5S_SELECT_NOOP );
  final public static int H5S_SELECT_NOTA = H5.J2C( JH5S_SELECT_NOTA );
  final public static int H5S_SELECT_NOTB = H5.J2C( JH5S_SELECT_NOTB );
  final public static int H5S_SELECT_OR = H5.J2C( JH5S_SELECT_OR );
  final public static int H5S_SELECT_PREPEND = H5.J2C( JH5S_SELECT_PREPEND );
  final public static int H5S_SELECT_SET = H5.J2C( JH5S_SELECT_SET );
  final public static int H5S_SELECT_XOR = H5.J2C( JH5S_SELECT_XOR );
  final public static int H5S_SIMPLE = H5.J2C( JH5S_SIMPLE );
  final public static int H5S_UNLIMITED = H5.J2C( JH5S_UNLIMITED );
}
