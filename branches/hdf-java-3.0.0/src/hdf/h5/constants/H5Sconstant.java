/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * Copyright by The HDF Group.                                               *
 * Copyright by the Board of Trustees of the University of Illinois.         *
 * All rights reserved.                                                      *
 *                                                                           *
 * This file is part of HDF Java Products. The full HDF Java copyright       *
 * notice, including terms governing use, modification, and redistribution,  *
 * is contained in the file, COPYING.  COPYING can be found at the root of   *
 * the source code distribution tree. You can also access it online  at      *
 * http://www.hdfgroup.org/products/licenses.html.  If you do not have       *
 * access to the file, you may request a copy from help@hdfgroup.org.        *
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

package hdf.h5.constants;


/**
/**
 *  This class contains C constants and enumerated types of HDF5 library.
 *  The values of these constants are obtained from the library by calling
 *  J2C(int jconstant), where jconstant is any of the private constants which
 *  start their name with "JH5" need to be converted.
 *  <p>
 *  <b>Do not edit this file!</b>
 *  </p>
 */
public class H5Sconstant {
    ///////////////////////////////////////////////////////////////////////////
    //           The values are used in the C JNI header file.               //
    //      DO NOT CHANGE THE VALUES UNLESS YOU KNOW WHAT YOU DO !!!         //
    ///////////////////////////////////////////////////////////////////////////

    final private static int JH5S_ALL = 10 ;
    final private static int JH5S_COMPLEX = 20 ;
    final private static int JH5S_MAX_RANK = 30 ;
    final private static int JH5S_NO_CLASS = 40 ;
    final private static int JH5S_SCALAR = 50 ;
    final private static int JH5S_SEL_ALL = 60 ;
    final private static int JH5S_SEL_ERROR = 70 ;
    final private static int JH5S_SEL_HYPERSLABS = 80 ;
    final private static int JH5S_SEL_N = 90 ;
    final private static int JH5S_SEL_NONE = 100 ;
    final private static int JH5S_SEL_POINTS = 110 ;
    final private static int JH5S_SELECT_AND = 120 ;
    final private static int JH5S_SELECT_APPEND = 130 ;
    final private static int JH5S_SELECT_INVALID = 140 ;
    final private static int JH5S_SELECT_NOOP = 150 ;
    final private static int JH5S_SELECT_NOTA = 160 ;
    final private static int JH5S_SELECT_NOTB = 170 ;
    final private static int JH5S_SELECT_OR = 180 ;
    final private static int JH5S_SELECT_PREPEND = 190 ;
    final private static int JH5S_SELECT_SET = 200 ;
    final private static int JH5S_SELECT_XOR = 210 ;
    final private static int JH5S_SIMPLE = 220 ;
    final private static int JH5S_UNLIMITED = 230 ;


    ///////////////////////////////////////////////////////////////////////////
    //                Get the HDF5 constants from the library                //
    ///////////////////////////////////////////////////////////////////////////
    final public static int H5S_ALL = J2C( JH5S_ALL );
    final public static int H5S_COMPLEX = J2C( JH5S_COMPLEX );
    final public static int H5S_MAX_RANK = J2C( JH5S_MAX_RANK );
    final public static int H5S_NO_CLASS = J2C( JH5S_NO_CLASS );
    final public static int H5S_SCALAR = J2C( JH5S_SCALAR );
    final public static int H5S_SEL_ALL = J2C( JH5S_SEL_ALL );
    final public static int H5S_SEL_ERROR = J2C( JH5S_SEL_ERROR );
    final public static int H5S_SEL_HYPERSLABS = J2C( JH5S_SEL_HYPERSLABS );
    final public static int H5S_SEL_N = J2C( JH5S_SEL_N );
    final public static int H5S_SEL_NONE = J2C( JH5S_SEL_NONE );
    final public static int H5S_SEL_POINTS = J2C( JH5S_SEL_POINTS );
    final public static int H5S_SELECT_AND = J2C( JH5S_SELECT_AND );
    final public static int H5S_SELECT_APPEND = J2C( JH5S_SELECT_APPEND );
    final public static int H5S_SELECT_INVALID = J2C( JH5S_SELECT_INVALID );
    final public static int H5S_SELECT_NOOP = J2C( JH5S_SELECT_NOOP );
    final public static int H5S_SELECT_NOTA = J2C( JH5S_SELECT_NOTA );
    final public static int H5S_SELECT_NOTB = J2C( JH5S_SELECT_NOTB );
    final public static int H5S_SELECT_OR = J2C( JH5S_SELECT_OR );
    final public static int H5S_SELECT_PREPEND = J2C( JH5S_SELECT_PREPEND );
    final public static int H5S_SELECT_SET = J2C( JH5S_SELECT_SET );
    final public static int H5S_SELECT_XOR = J2C( JH5S_SELECT_XOR );
    final public static int H5S_SIMPLE = J2C( JH5S_SIMPLE );
    final public static int H5S_UNLIMITED = J2C( JH5S_UNLIMITED );

    /**
     *  J2C converts a Java constant to an HDF5 constant determined at runtime
     *
     *  @param java_constant IN: The value of Java constant
     *  
     *  @return the value of an HDF5 constant determined at runtime
     **/
    public synchronized static native int J2C(int java_constant);
}
