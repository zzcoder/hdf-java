/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * Copyright by The HDF Group.                                               *
 * Copyright by the Board of Trustees of the University of Illinois.         *
 * All rights reserved.                                                      *
 *                                                                           *
 * This file is part of HDF Java Products. The full HDF Java copyright       *
 * notice, including terms governing use, modification, and redistribution,  *
 * is contained in the file, COPYING.  COPYING can be found at the root of   *
 * the source code distribution tree. You can also access it online  at      *
 * http://www.hdfgroup.org/products/licenses.html.  If you do not have       *
 * access to the file, you may request a copy from help@hdfgroup.org.        *
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

package hdf.h5.constants;

import hdf.h5.H5;


/**
/**
 *  This class contains C constants and enumerated types of HDF5 library.
 *  The values of these constants are obtained from the library by calling
 *  J2C(int jconstant), where jconstant is any of the private constants which
 *  start their name with "JH5" need to be converted.
 *  <p>
 *  <b>Do not edit this file!</b>
 *  </p>
 */
public class H5Zconstant
{
    static { H5.loadH5Lib(); } // make sure the library is available.

    ///////////////////////////////////////////////////////////////////////////
    //           The values are used in the C JNI header file.               //
    //      DO NOT CHANGE THE VALUES UNLESS YOU KNOW WHAT YOU DO !!!         //
    ///////////////////////////////////////////////////////////////////////////
    private static final int JH5Z_CB_CONT = 10 ;
    private static final int JH5Z_CB_ERROR = 20 ;
    private static final int JH5Z_CB_FAIL = 30 ;
    private static final int JH5Z_CB_NO = 40 ;
    private static final int JH5Z_DISABLE_EDC = 50 ;
    private static final int JH5Z_ENABLE_EDC = 60 ;
    private static final int JH5Z_ERROR_EDC = 70 ;
    private static final int JH5Z_FILTER_DEFLATE = 80 ;
    private static final int JH5Z_FILTER_ERROR = 90 ;
    private static final int JH5Z_FILTER_FLETCHER32 = 100 ;
    private static final int JH5Z_FILTER_MAX = 110 ;
    private static final int JH5Z_FILTER_NONE = 120 ;
    private static final int JH5Z_FILTER_RESERVED = 130 ;
    private static final int JH5Z_FILTER_SHUFFLE = 140 ;
    private static final int JH5Z_FILTER_SZIP = 150 ;
    private static final int JH5Z_FLAG_DEFMASK = 160 ;
    private static final int JH5Z_FLAG_INVMASK = 170 ;
    private static final int JH5Z_FLAG_MANDATORY = 180 ;
    private static final int JH5Z_FLAG_OPTIONAL = 190 ;
    private static final int JH5Z_FLAG_REVERSE = 200 ;
    private static final int JH5Z_FLAG_SKIP_EDC = 210 ;
    private static final int JH5Z_MAX_NFILTERS = 220 ;
    private static final int JH5Z_NO_EDC = 230 ;
    private static final int JH5Z_FILTER_CONFIG_ENCODE_ENABLED = 240 ;
    private static final int JH5Z_FILTER_CONFIG_DECODE_ENABLED = 250 ;
    private static final int JH5Z_SO_INT_MINBITS_DEFAULT = 260 ;
    private static final int JH5_SZIP_ALLOW_K13_OPTION_MASK  = 270 ;
    private static final int JH5_SZIP_CHIP_OPTION_MASK       = 280 ;
    private static final int JH5_SZIP_EC_OPTION_MASK         = 290 ;
    private static final int JH5_SZIP_NN_OPTION_MASK         = 300 ;
    private static final int JH5_SZIP_MAX_PIXELS_PER_BLOCK   = 310 ;
    private static final int JH5Z_SHUFFLE_USER_NPARMS   = 320 ; 
    private static final int JH5Z_SHUFFLE_TOTAL_NPARMS  = 330 ; 
    private static final int JH5Z_SZIP_USER_NPARMS   = 340 ; 
    private static final int JH5Z_SZIP_TOTAL_NPARMS  = 350 ; 
    private static final int JH5Z_SZIP_PARM_MASK     = 360 ;   
    private static final int JH5Z_SZIP_PARM_PPB      = 370 ;    
    private static final int JH5Z_SZIP_PARM_BPP      = 380 ;    
    private static final int JH5Z_SZIP_PARM_PPS      = 390 ;    
    private static final int JH5Z_NBIT_USER_NPARMS   = 400 ;   
    private static final int JH5Z_SCALEOFFSET_USER_NPARMS = 410 ; 
    private static final int JH5Z_FILTER_ALL   = 420 ;   


    ///////////////////////////////////////////////////////////////////////////
    //                Get the HDF5 constants from the library                //
    ///////////////////////////////////////////////////////////////////////////

    final public static int H5Z_CB_CONT = J2C( JH5Z_CB_CONT );
    final public static int H5Z_CB_ERROR = J2C( JH5Z_CB_ERROR );
    final public static int H5Z_CB_FAIL = J2C( JH5Z_CB_FAIL );
    final public static int H5Z_CB_NO = J2C( JH5Z_CB_NO );
    final public static int H5Z_DISABLE_EDC = J2C( JH5Z_DISABLE_EDC );
    final public static int H5Z_ENABLE_EDC = J2C( JH5Z_ENABLE_EDC );
    final public static int H5Z_ERROR_EDC = J2C( JH5Z_ERROR_EDC );
    final public static int H5Z_FILTER_DEFLATE = J2C( JH5Z_FILTER_DEFLATE );
    final public static int H5Z_FILTER_ERROR = J2C( JH5Z_FILTER_ERROR );
    final public static int H5Z_FILTER_FLETCHER32 = J2C( JH5Z_FILTER_FLETCHER32 );
    final public static int H5Z_FILTER_MAX = J2C( JH5Z_FILTER_MAX );
    final public static int H5Z_FILTER_NONE = J2C( JH5Z_FILTER_NONE );
    final public static int H5Z_FILTER_RESERVED = J2C( JH5Z_FILTER_RESERVED );
    final public static int H5Z_FILTER_SHUFFLE = J2C( JH5Z_FILTER_SHUFFLE );
    final public static int H5Z_FILTER_SZIP = J2C( JH5Z_FILTER_SZIP );
    final public static int H5Z_FLAG_DEFMASK = J2C( JH5Z_FLAG_DEFMASK );
    final public static int H5Z_FLAG_INVMASK = J2C( JH5Z_FLAG_INVMASK );
    final public static int H5Z_FLAG_MANDATORY = J2C( JH5Z_FLAG_MANDATORY );
    final public static int H5Z_FLAG_OPTIONAL = J2C( JH5Z_FLAG_OPTIONAL );
    final public static int H5Z_FLAG_REVERSE = J2C( JH5Z_FLAG_REVERSE );
    final public static int H5Z_FLAG_SKIP_EDC = J2C( JH5Z_FLAG_SKIP_EDC );
    final public static int H5Z_MAX_NFILTERS = J2C( JH5Z_MAX_NFILTERS );
    final public static int H5Z_NO_EDC = J2C( JH5Z_NO_EDC );
    final public static int H5Z_FILTER_CONFIG_ENCODE_ENABLED = J2C( JH5Z_FILTER_CONFIG_ENCODE_ENABLED );
    final public static int H5Z_FILTER_CONFIG_DECODE_ENABLED = J2C( JH5Z_FILTER_CONFIG_DECODE_ENABLED );
    public static final int  H5Z_SO_INT_MINBITS_DEFAULT = J2C(JH5Z_SO_INT_MINBITS_DEFAULT);
    public static final int  H5_SZIP_ALLOW_K13_OPTION_MASK  = J2C(JH5_SZIP_ALLOW_K13_OPTION_MASK );
    public static final int  H5_SZIP_CHIP_OPTION_MASK       = J2C(JH5_SZIP_CHIP_OPTION_MASK      );
    public static final int  H5_SZIP_EC_OPTION_MASK         = J2C(JH5_SZIP_EC_OPTION_MASK        );
    public static final int  H5_SZIP_NN_OPTION_MASK         = J2C(JH5_SZIP_NN_OPTION_MASK        );
    public static final int  H5_SZIP_MAX_PIXELS_PER_BLOCK   = J2C(JH5_SZIP_MAX_PIXELS_PER_BLOCK  );
    public static final int  H5Z_SHUFFLE_USER_NPARMS   = J2C(JH5Z_SHUFFLE_USER_NPARMS  );
    public static final int  H5Z_SHUFFLE_TOTAL_NPARMS  = J2C(JH5Z_SHUFFLE_TOTAL_NPARMS );
    public static final int  H5Z_SZIP_USER_NPARMS   = J2C(JH5Z_SZIP_USER_NPARMS  );
    public static final int  H5Z_SZIP_TOTAL_NPARMS  = J2C(JH5Z_SZIP_TOTAL_NPARMS );
    public static final int  H5Z_SZIP_PARM_MASK     = J2C(JH5Z_SZIP_PARM_MASK    );
    public static final int  H5Z_SZIP_PARM_PPB      = J2C(JH5Z_SZIP_PARM_PPB     );
    public static final int  H5Z_SZIP_PARM_BPP      = J2C(JH5Z_SZIP_PARM_BPP     );
    public static final int  H5Z_SZIP_PARM_PPS      = J2C(JH5Z_SZIP_PARM_PPS     );
    public static final int  H5Z_NBIT_USER_NPARMS   = J2C(JH5Z_NBIT_USER_NPARMS  );
    public static final int  H5Z_SCALEOFFSET_USER_NPARMS = J2C(JH5Z_SCALEOFFSET_USER_NPARMS);
    public static final int  H5Z_FILTER_ALL   = J2C(JH5Z_FILTER_ALL  );

    /**
     *  J2C converts a Java constant to an HDF5 constant determined at runtime
     *
     *  @param java_constant IN: The value of Java constant
     *  
     *  @return the value of an HDF5 constant determined at runtime
     **/
    private synchronized static native int J2C(int java_constant);}
