/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * Copyright by The HDF Group.                                               *
 * Copyright by the Board of Trustees of the University of Illinois.         *
 * All rights reserved.                                                      *
 *                                                                           *
 * This file is part of HDF Java Products. The full HDF Java copyright       *
 * notice, including terms governing use, modification, and redistribution,  *
 * is contained in the file, COPYING.  COPYING can be found at the root of   *
 * the source code distribution tree. You can also access it online  at      *
 * http://www.hdfgroup.org/products/licenses.html.  If you do not have       *
 * access to the file, you may request a copy from help@hdfgroup.org.        *
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

package hdf.h5.constants;


/**
/**
 *  This class contains C constants and enumerated types of HDF5 library.
 *  The values of these constants are obtained from the library by calling
 *  J2C(int jconstant), where jconstant is any of the private constants which
 *  start their name with "JH5" need to be converted.
 *  <p>
 *  <b>Do not edit this file!</b>
 *  </p>
 */
public class H5Econstant {
    ///////////////////////////////////////////////////////////////////////////
    //           The values are used in the C JNI header file.               //
    //      DO NOT CHANGE THE VALUES UNLESS YOU KNOW WHAT YOU DO !!!         //
    ///////////////////////////////////////////////////////////////////////////

    final private static int JH5E_ALIGNMENT = 10 ;
    final private static int JH5E_ALREADYEXISTS = 20 ;
    final private static int JH5E_ALREADYINIT = 30 ;
    final private static int JH5E_ARGS = 40 ;
    final private static int JH5E_ATOM = 50 ;
    final private static int JH5E_ATTR = 60 ;
    final private static int JH5E_BADATOM = 70 ;
    final private static int JH5E_BADFILE = 80 ;
    final private static int JH5E_BADGROUP = 90 ;
    final private static int JH5E_BADMESG = 100 ;
    final private static int JH5E_BADRANGE = 110 ;
    final private static int JH5E_BADSELECT = 120 ;
    final private static int JH5E_BADSIZE = 130 ;
    final private static int JH5E_BADTYPE = 140 ;
    final private static int JH5E_BADVALUE = 150 ;
    final private static int JH5E_BTREE = 160 ;
    final private static int JH5E_CACHE = 170 ;
    final private static int JH5E_CALLBACK = 180 ;
    final private static int JH5E_CANAPPLY = 190 ;
    final private static int JH5E_CANTALLOC = 200 ;
    final private static int JH5E_CANTCHANGE = 210 ;
    final private static int JH5E_CANTCLIP = 220 ;
    final private static int JH5E_CANTCLOSEFILE = 230 ;
    final private static int JH5E_CANTCONVERT = 240 ;
    final private static int JH5E_CANTCOPY = 250 ;
    final private static int JH5E_CANTCOUNT = 260 ;
    final private static int JH5E_CANTCREATE = 270 ;
    final private static int JH5E_CANTDEC = 280 ;
    final private static int JH5E_CANTDECODE = 290 ;
    final private static int JH5E_CANTDELETE = 300 ;
    final private static int JH5E_CANTENCODE = 310 ;
    final private static int JH5E_CANTFLUSH = 320 ;
    final private static int JH5E_CANTFREE = 330 ;
    final private static int JH5E_CANTGET = 340 ;
    final private static int JH5E_CANTINC = 350 ;
    final private static int JH5E_CANTINIT = 360 ;
    final private static int JH5E_CANTINSERT = 370 ;
    final private static int JH5E_CANTLIST = 380 ;
    final private static int JH5E_CANTLOAD = 390 ;
    final private static int JH5E_CANTLOCK = 400 ;
    final private static int JH5E_CANTMAKETREE = 410 ;
    final private static int JH5E_CANTNEXT = 420 ;
    final private static int JH5E_CANTOPENFILE = 430 ;
    final private static int JH5E_CANTOPENOBJ = 440 ;
    final private static int JH5E_CANTRECV = 450 ;
    final private static int JH5E_CANTREGISTER = 460 ;
    final private static int JH5E_CANTRELEASE = 470 ;
    final private static int JH5E_CANTSELECT = 480 ;
    final private static int JH5E_CANTSENDMDATA = 490 ;
    final private static int JH5E_CANTSET = 500 ;
    final private static int JH5E_CANTSPLIT = 510 ;
    final private static int JH5E_CANTUNLOCK = 520 ;
    final private static int JH5E_CLOSEERROR = 530 ;
    final private static int JH5E_COMPLEN = 540 ;
    final private static int JH5E_CWG = 550 ;
    final private static int JH5E_DATASET = 560 ;
    final private static int JH5E_DATASPACE = 570 ;
    final private static int JH5E_DATATYPE = 580 ;
    final private static int JH5E_DUPCLASS = 590 ;
    final private static int JH5E_EFL = 600 ;
    final private static int JH5E_EXISTS = 610 ;
    final private static int JH5E_FCNTL = 620 ;
    final private static int JH5E_FILE = 630 ;
    final private static int JH5E_FILEEXISTS = 640 ;
    final private static int JH5E_FILEOPEN = 650 ;
    final private static int JH5E_FPHDF5 = 660 ;
    final private static int JH5E_FUNC = 670 ;
    final private static int JH5E_HEAP = 680 ;
    final private static int JH5E_INTERNAL = 690 ;
    final private static int JH5E_IO = 700 ;
    final private static int JH5E_LINK = 710 ;
    final private static int JH5E_LINKCOUNT = 720 ;
    final private static int JH5E_MOUNT = 730 ;
    final private static int JH5E_MPI = 740 ;
    final private static int JH5E_MPIERRSTR = 750 ;
    final private static int JH5E_NOFILTER = 760 ;
    final private static int JH5E_NOIDS = 770 ;
    final private static int JH5E_NONE_MAJOR = 780 ;
    final private static int JH5E_NONE_MINOR = 790 ;
    final private static int JH5E_NOSPACE = 800 ;
    final private static int JH5E_NOTCACHED = 810 ;
    final private static int JH5E_NOTFOUND = 820 ;
    final private static int JH5E_NOTHDF5 = 830 ;
    final private static int JH5E_OHDR = 840 ;
    final private static int JH5E_OVERFLOW = 850 ;
    final private static int JH5E_PLINE = 860 ;
    final private static int JH5E_PLIST = 870 ;
    final private static int JH5E_PROTECT = 880 ;
    final private static int JH5E_READERROR = 890 ;
    final private static int JH5E_REFERENCE = 900 ;
    final private static int JH5E_RESOURCE = 910 ;
    final private static int JH5E_RS = 920 ;
    final private static int JH5E_SEEKERROR = 930 ;
    final private static int JH5E_SETLOCAL = 940 ;
    final private static int JH5E_SLINK = 950 ;
    final private static int JH5E_STORAGE = 960 ;
    final private static int JH5E_SYM = 970 ;
    final private static int JH5E_TBBT = 980 ;
    final private static int JH5E_TRUNCATED = 990 ;
    final private static int JH5E_TST = 1000 ;
    final private static int JH5E_UNINITIALIZED = 1010 ;
    final private static int JH5E_UNSUPPORTED = 1020 ;
    final private static int JH5E_VERSION = 1030 ;
    final private static int JH5E_VFL = 1040 ;
    final private static int JH5E_WALK_DOWNWARD = 1050 ;
    final private static int JH5E_WALK_UPWARD = 1060 ;
    final private static int JH5E_WRITEERROR = 1070 ;

    ///////////////////////////////////////////////////////////////////////////
    //                Get the HDF5 constants from the library                //
    ///////////////////////////////////////////////////////////////////////////
    final public static int H5E_ALIGNMENT = J2C( JH5E_ALIGNMENT );
    final public static int H5E_ALREADYEXISTS = J2C( JH5E_ALREADYEXISTS );
    final public static int H5E_ALREADYINIT = J2C( JH5E_ALREADYINIT );
    final public static int H5E_ARGS = J2C( JH5E_ARGS );
    final public static int H5E_ATOM = J2C( JH5E_ATOM );
    final public static int H5E_ATTR = J2C( JH5E_ATTR );
    final public static int H5E_BADATOM = J2C( JH5E_BADATOM );
    final public static int H5E_BADFILE = J2C( JH5E_BADFILE );
    final public static int H5E_BADGROUP = J2C( JH5E_BADGROUP );
    final public static int H5E_BADMESG = J2C( JH5E_BADMESG );
    final public static int H5E_BADRANGE = J2C( JH5E_BADRANGE );
    final public static int H5E_BADSELECT = J2C( JH5E_BADSELECT );
    final public static int H5E_BADSIZE = J2C( JH5E_BADSIZE );
    final public static int H5E_BADTYPE = J2C( JH5E_BADTYPE );
    final public static int H5E_BADVALUE = J2C( JH5E_BADVALUE );
    final public static int H5E_BTREE = J2C( JH5E_BTREE );
    final public static int H5E_CACHE = J2C( JH5E_CACHE );
    final public static int H5E_CALLBACK = J2C( JH5E_CALLBACK );
    final public static int H5E_CANAPPLY = J2C( JH5E_CANAPPLY );
    final public static int H5E_CANTALLOC = J2C( JH5E_CANTALLOC );
    final public static int H5E_CANTCHANGE = J2C( JH5E_CANTCHANGE );
    final public static int H5E_CANTCLIP = J2C( JH5E_CANTCLIP );
    final public static int H5E_CANTCLOSEFILE = J2C( JH5E_CANTCLOSEFILE );
    final public static int H5E_CANTCONVERT = J2C( JH5E_CANTCONVERT );
    final public static int H5E_CANTCOPY = J2C( JH5E_CANTCOPY );
    final public static int H5E_CANTCOUNT = J2C( JH5E_CANTCOUNT );
    final public static int H5E_CANTCREATE = J2C( JH5E_CANTCREATE );
    final public static int H5E_CANTDEC = J2C( JH5E_CANTDEC );
    final public static int H5E_CANTDECODE = J2C( JH5E_CANTDECODE );
    final public static int H5E_CANTDELETE = J2C( JH5E_CANTDELETE );
    final public static int H5E_CANTENCODE = J2C( JH5E_CANTENCODE );
    final public static int H5E_CANTFLUSH = J2C( JH5E_CANTFLUSH );
    final public static int H5E_CANTFREE = J2C( JH5E_CANTFREE );
    final public static int H5E_CANTGET = J2C( JH5E_CANTGET );
    final public static int H5E_CANTINC = J2C( JH5E_CANTINC );
    final public static int H5E_CANTINIT = J2C( JH5E_CANTINIT );
    final public static int H5E_CANTINSERT = J2C( JH5E_CANTINSERT );
    final public static int H5E_CANTLIST = J2C( JH5E_CANTLIST );
    final public static int H5E_CANTLOAD = J2C( JH5E_CANTLOAD );
    final public static int H5E_CANTLOCK = J2C( JH5E_CANTLOCK );
    final public static int H5E_CANTMAKETREE = J2C( JH5E_CANTMAKETREE );
    final public static int H5E_CANTNEXT = J2C( JH5E_CANTNEXT );
    final public static int H5E_CANTOPENFILE = J2C( JH5E_CANTOPENFILE );
    final public static int H5E_CANTOPENOBJ = J2C( JH5E_CANTOPENOBJ );
    final public static int H5E_CANTRECV = J2C( JH5E_CANTRECV );
    final public static int H5E_CANTREGISTER = J2C( JH5E_CANTREGISTER );
    final public static int H5E_CANTRELEASE = J2C( JH5E_CANTRELEASE );
    final public static int H5E_CANTSELECT = J2C( JH5E_CANTSELECT );
    final public static int H5E_CANTSENDMDATA = J2C( JH5E_CANTSENDMDATA );
    final public static int H5E_CANTSET = J2C( JH5E_CANTSET );
    final public static int H5E_CANTSPLIT = J2C( JH5E_CANTSPLIT );
    final public static int H5E_CANTUNLOCK = J2C( JH5E_CANTUNLOCK );
    final public static int H5E_CLOSEERROR = J2C( JH5E_CLOSEERROR );
    final public static int H5E_COMPLEN = J2C( JH5E_COMPLEN );
    final public static int H5E_CWG = J2C( JH5E_CWG );
    final public static int H5E_DATASET = J2C( JH5E_DATASET );
    final public static int H5E_DATASPACE = J2C( JH5E_DATASPACE );
    final public static int H5E_DATATYPE = J2C( JH5E_DATATYPE );
    final public static int H5E_DUPCLASS = J2C( JH5E_DUPCLASS );
    final public static int H5E_EFL = J2C( JH5E_EFL );
    final public static int H5E_EXISTS = J2C( JH5E_EXISTS );
    final public static int H5E_FCNTL = J2C( JH5E_FCNTL );
    final public static int H5E_FILE = J2C( JH5E_FILE );
    final public static int H5E_FILEEXISTS = J2C( JH5E_FILEEXISTS );
    final public static int H5E_FILEOPEN = J2C( JH5E_FILEOPEN );
    final public static int H5E_FPHDF5 = J2C( JH5E_FPHDF5 );
    final public static int H5E_FUNC = J2C( JH5E_FUNC );
    final public static int H5E_HEAP = J2C( JH5E_HEAP );
    final public static int H5E_INTERNAL = J2C( JH5E_INTERNAL );
    final public static int H5E_IO = J2C( JH5E_IO );
    final public static int H5E_LINK = J2C( JH5E_LINK );
    final public static int H5E_LINKCOUNT = J2C( JH5E_LINKCOUNT );
    final public static int H5E_MOUNT = J2C( JH5E_MOUNT );
    final public static int H5E_MPI = J2C( JH5E_MPI );
    final public static int H5E_MPIERRSTR = J2C( JH5E_MPIERRSTR );
    final public static int H5E_NOFILTER = J2C( JH5E_NOFILTER );
    final public static int H5E_NOIDS = J2C( JH5E_NOIDS );
    final public static int H5E_NONE_MAJOR = J2C( JH5E_NONE_MAJOR );
    final public static int H5E_NONE_MINOR = J2C( JH5E_NONE_MINOR );
    final public static int H5E_NOSPACE = J2C( JH5E_NOSPACE );
    final public static int H5E_NOTCACHED = J2C( JH5E_NOTCACHED );
    final public static int H5E_NOTFOUND = J2C( JH5E_NOTFOUND );
    final public static int H5E_NOTHDF5 = J2C( JH5E_NOTHDF5 );
    final public static int H5E_OHDR = J2C( JH5E_OHDR );
    final public static int H5E_OVERFLOW = J2C( JH5E_OVERFLOW );
    final public static int H5E_PLINE = J2C( JH5E_PLINE );
    final public static int H5E_PLIST = J2C( JH5E_PLIST );
    final public static int H5E_PROTECT = J2C( JH5E_PROTECT );
    final public static int H5E_READERROR = J2C( JH5E_READERROR );
    final public static int H5E_REFERENCE = J2C( JH5E_REFERENCE );
    final public static int H5E_RESOURCE = J2C( JH5E_RESOURCE );
    final public static int H5E_RS = J2C( JH5E_RS );
    final public static int H5E_SEEKERROR = J2C( JH5E_SEEKERROR );
    final public static int H5E_SETLOCAL = J2C( JH5E_SETLOCAL );
    final public static int H5E_SLINK = J2C( JH5E_SLINK );
    final public static int H5E_STORAGE = J2C( JH5E_STORAGE );
    final public static int H5E_SYM = J2C( JH5E_SYM );
    final public static int H5E_TBBT = J2C( JH5E_TBBT );
    final public static int H5E_TRUNCATED = J2C( JH5E_TRUNCATED );
    final public static int H5E_TST = J2C( JH5E_TST );
    final public static int H5E_UNINITIALIZED = J2C( JH5E_UNINITIALIZED );
    final public static int H5E_UNSUPPORTED = J2C( JH5E_UNSUPPORTED );
    final public static int H5E_VERSION = J2C( JH5E_VERSION );
    final public static int H5E_VFL = J2C( JH5E_VFL );
    final public static int H5E_WALK_DOWNWARD = J2C( JH5E_WALK_DOWNWARD );
    final public static int H5E_WALK_UPWARD = J2C( JH5E_WALK_UPWARD );
    final public static int H5E_WRITEERROR = J2C( JH5E_WRITEERROR );

    /**
     *  J2C converts a Java constant to an HDF5 constant determined at runtime
     *
     *  @param java_constant IN: The value of Java constant
     *  
     *  @return the value of an HDF5 constant determined at runtime
     **/
    public synchronized static native int J2C(int java_constant);

}
